{
  "hash": "1ec03f08c4b044139da5433805c2b053",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"quarto introduction\"\n\n\nauthor: \"Tony Duan\"\n\nexecute:\n  warning: false\n  error: false\n\n  \nformat:\n  html:\n    toc: true\n    toc-location: right\n    code-fold: show\n    code-tools: true\n    \n    code-block-bg: true\n    code-block-border-left: \"#31BAE9\"\n    code-copy: true\ncss: hscroll.css\n---\n\n# install quarto\n\n## install quarto CLI\n\nhttps://quarto.org/docs/get-started/\n\n## install quarto pacakge\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"quarto\")\n```\n:::\n\n# check quarto version\n\n## in Terminal\n\n::: {.cell filename='Terminal'}\n\n```{.bash .cell-code}\nquarto check\n```\n:::\n\n![](images/paste-1.png){width=\"600\"}\n\n## in R\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(quarto)\nquarto_version()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] '99.9.9'\n```\n\n\n:::\n:::\n\nquarto location\n\n::: {.cell}\n\n```{.r .cell-code}\nquarto_path()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"/usr/local/bin/quarto\"\n```\n\n\n:::\n:::\n\n# quarto code chunk\n\n\n## R\n\n```{{R}}\nversion\n```\n\n## Python\n\n```{{python}}\nimport sys\nprint(sys.version)\n```\n\n## Bash\n\n\n```{{bash}}\necho \"foo\" \n```\n\n\n# calling variable between R and Python\n\nThere are R variable: r_var  and Python version:python_var\n\n```{{r}}\nr_var=111\n```\n\n::: {.cell}\n\n:::\n\n\n```{{python}}\npython_var=222\n```\n\n\n::: {.cell}\n\n:::\n\n::: panel-tabset\n\n## calling python variable in R\n```{{python}}\nr.r_var\n```\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n111.0\n```\n\n\n:::\n:::\n\n\n## calling R variable in Python\n```{{r}}\nlibrary(reticulate)\npy$python_var\n```\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 222\n```\n\n\n:::\n:::\n\n\n\n\n::: \n\n\n\n# quarto code chunk option\n\n## in YAML header\n\n``` yaml\n---\ntitle: \"My Document\"\nexecute:\n  echo: false\njupyter: python3\n---\n```\n\n-   eval： Evaluate the code chunk (if false, just echos the code into the output).\n\n-   echo： Include the source code in output.\n\n-   output： Include the results of executing the code in the output (true, false, or asis to indicate that the output is raw markdown and should not have any of Quarto’s standard enclosing markdown).\n\n-   warning： Include warnings in the output.\n\n-   error： Evaluate the code chunk (if false, just echos the code into the output).\n\n-   include： Catch all for preventing any output (code or results) from being included (e.g. include: false suppresses all output from the code block).\n\n## in code chunk\n\n::: {.cell}\n\n```{.bash .cell-code}\n #| eval: false\n```\n:::\n\n\n# code chunk name\n\n`{r filename='code chunk name sample'}`\n\n::: {.cell filename='code chunk name sample'}\n\n```{.r .cell-code}\na=1\na\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1\n```\n\n\n:::\n:::\n\n# Rmarkdown\n\n::: {.cell}\n\n```{.r .cell-code}\n*italics* and _italics_\n**bold** and __bold__\nsuperscript^2^\n~~strikethrough~~\n[link](www.rstudio.com)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n*italics* \n```\n:::\n\n*italics*\n\n::: {.cell}\n\n```{.r .cell-code}\n**bold**\n```\n:::\n\n**bold**\n\n::: {.cell}\n\n```{.r .cell-code}\nsuperscript^2^\n```\n:::\n\nsuperscript^2^\n\n::: {.cell}\n\n```{.r .cell-code}\n~~strikethrough~~\n```\n:::\n\n~~strikethrough~~\n\n::: {.cell}\n\n```{.r .cell-code}\n`highlight`\n```\n:::\n\n`highlight`\n\n## link\n\n````\n[link](www.rstudio.com)\n````\n\n\n[link](www.rstudio.com)\n\n## tab\n\n````\n::: {.panel-tabset}\n\n## Tab 1\n\nThis is tab 1\n\n\n## Tab 2\n\nThis is tab 2\n\n:::\n````\n\n::: panel-tabset\n### Tab 1\n\nThis is tab 1\n\n### Tab 2\n\nThis is tab 2\n:::\n\n## column display\n\n::: {.cell}\n\n```{.r .cell-code}\n::: columns\n::: {.column width=\"40%\"}\nthis column with 40% width\n::: \n\n::: {.column width=\"60%\"}\nthis column with 60% width\n::: \n\n::: \n```\n:::\n\n::::: columns\n::: {.column width=\"40%\"}\nthis column with 40% width\n:::\n\n::: {.column width=\"60%\"}\nthis column with 60% width\n:::\n:::::\n\n# Add a horizontal scroll bar\n\n-   add hscroll.css file\n\n::: {.cell}\n\n```{.r .cell-code}\n.hscroll {\n  overflow: auto;\n  white-space: nowrap;\n}\n```\n:::\n\n-   add css option in YAML header\n\n::: {.cell}\n\n```{.r .cell-code}\n---\ncss: hscroll.css\n---\n```\n:::\n\n-   add `# {.hscroll .scrollable}` on the section which want to be Slide bar\n\n#  {.hscroll .scrollable}\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas dolor mauris, mattis non nunc nec, luctus aliquet magna. In tortor ante, aliquam eget felis eu, consectetur congue enim. Pellentesque pellentesque tincidunt lectus quis lacinia. Aliquam dolor sem, aliquet vitae aliquam eget, vehicula ac augue. Pellentesque molestie quam et commodo dignissim. Suspendisse potenti. Sed pellentesque metus non turpis condimentum molestie. Nullam accumsan urna nec luctus rutrum. Nunc dapibus auctor convallis. Praesent ac felis fermentum, venenatis elit vel, venenatis mi. Fusce non tellus risus. Phasellus elementum erat sit amet urna venenatis maximus. Nunc vehicula pretium scelerisque.\n\n# Add a vertical scroll bar\n\n::: {.scroll-container style=\"overflow-x: scroll; height: 600px;\"}\nimages1.png\n\nimages2.png\n:::\n\n::: {.scroll-container style=\"overflow-x: scroll; height: 600px;\"}\n![](images/12.png){width=\"900\"}\n\n![](images/13.png){width=\"900\"}\n:::\n\n# add a output hide bottom at quarto file\n\n## step 1.  add foldableCodeBlcok.lua into blog root folder\n\n::: {.cell filename='foldableCodeBlcok.lua'}\n\n```{.r .cell-code}\nfunction CodeBlock(elem)\n  if elem.classes and elem.classes:find(\"details\") then\n    local summary = \"Code\"\n    if elem.attributes.summary then\n      summary = elem.attributes.summary\n    end\n    return{\n      pandoc.RawBlock(\n        \"html\", \"<details><summary>\" .. summary .. \"</summary>\"\n      ),\n      elem,\n      pandoc.RawBlock(\"html\", \"</details>\")\n    }\n  end\nend\n```\n:::\n\n## step 2.  add following line in `_quarto.yml`\n\n::: {.cell filename='_quarto.yml'}\n\n```{.r .cell-code}\nwebsite:\n  title: \"quarto blog\"\n\nfilters:\n  - foldableCodeBlcok.lua\n```\n:::\n\n\n## step 3.  put following on code chunk:\n\n`{r, attr.output='.details summary=\"sessionInfo()\"'}`\n\n::: {.cell}\n\n```{.r .cell-code}\nsessionInfo()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```{.details summary=\"sessionInfo()\"}\nR version 4.4.1 (2024-06-14)\nPlatform: aarch64-apple-darwin20\nRunning under: macOS 15.3.2\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRblas.0.dylib \nLAPACK: /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.12.0\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\ntime zone: Asia/Shanghai\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] reticulate_1.41.0 quarto_1.4.4     \n\nloaded via a namespace (and not attached):\n [1] digest_0.6.37       later_1.4.1         fastmap_1.2.0      \n [4] Matrix_1.7-2        xfun_0.51           lattice_0.22-6     \n [7] knitr_1.49          htmltools_0.5.8.1   png_0.1-8          \n[10] rmarkdown_2.29      ps_1.9.0            cli_3.6.4          \n[13] processx_3.8.6.9000 grid_4.4.1          compiler_4.4.1     \n[16] rstudioapi_0.17.1   tools_4.4.1         evaluate_1.0.3     \n[19] Rcpp_1.0.14         yaml_2.3.10         rlang_1.1.5        \n[22] jsonlite_2.0.0      htmlwidgets_1.6.4  \n```\n\n\n:::\n:::\n\n# render all quarto website\n\n::: {.cell filename='Terminal'}\n\n```{.r .cell-code}\nquarto render \"tidymodel in R\"\n```\n:::\n\n# embed video\n\n## embed youtube\n\n::: {.cell}\n\n```{.r .cell-code}\n<iframe width=\"640\" height=\"480\" src=\"https://www.youtube.com/embed/nku5zFMZAdU\" frameborder=\"0\" allow=\"autoplay; encrypted-media\" allowfullscreen>\n</iframe>\n```\n:::\n\n## embed bilibili\n\n\n<iframe  width=\"640\" height=\"480\"  src=\"//player.bilibili.com/player.html?isOutside=true&aid=892286280&bvid=BV1pP4y1G7hU&cid=461709819&p=1&autoplay=0&muted=false&danmaku=0\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"\nsandbox=\"allow-top-navigation allow-same-origin allow-forms allow-scripts\"></iframe>\n\n\n\n\n## embed local video\n\n::: {.cell}\n\n```{.r .cell-code}\n{{< video images/vv.mp4 height=\"600\" >}}\n```\n:::\n\n# embed audio\n\n::: panel-tabset\n\n## in code\n\n::: {.cell}\n\n```{.r .cell-code}\n<figure>\n<figcaption>click to play</figcaption>\n<audio controls src=\"aa.mp3\">\n        Your browser does not support the\n        <code>audio</code> element.\n</audio>\n</figure>\n```\n:::\n\n## in YAML header\n\n``` yaml\n---\nformat:\n  html:\n    resources:\n      - aa.mp3\n---\n```\n\n:::\n\n\n# Fonts\n\n## in _quarto.yml(for all page) or header(only for this page)\n\n::: {.cell filename='_quarto.yml'}\n\n```{.r .cell-code}\nformat:\n  html:\n    mainfont:Times New Roman\n    font-size: 120%;\n  \n# can find more font:https://developer.mozilla.org/en-US/docs/Web/CSS/font-family\n```\n:::\n\nsource:https://quarto.org/docs/reference/formats/context.html\n\n## in page\n::: {.cell}\n\n```{.r .cell-code}\n<p style=\"font-family: times, serif; font-size:500% \">This is font size 500%</p>\n```\n:::\n\n<p style=\"font-family: times, serif; font-size:500% \">This is font size 500%</p> \n\n::: {.cell}\n\n```{.r .cell-code}\n<p style=\"font-family: times, serif; font-size:50% \">This is font size 50%</p>\n```\n:::\n\n<p style=\"font-family: times, serif; font-size:50% \">This is font size 50%</p> \n\n\n\n# Theme\n\nin _quarto.yml(for all page) or header(only for this page)\n\n::: {.cell filename='_quarto.yml'}\n\n```{.r .cell-code}\ntheme:\n  light: cosmo\n  dark: [cosmo, theme-dark.scss]\n```\n:::\n\n\nsource:https://quarto.org/docs/output-formats/html-themes.html\n\n\n\n\n\n\n\n# Managing Execution\n\n\n## render a folder or file\n\n\n::: {.cell filename='Terminal'}\n\n```{.bash .cell-code}\nquarto render introduction.qmd\nquarto render subdir/\n```\n:::\n\n\n\n\n## Freeze\n\nYou can use the freeze option to denote that computational documents should never be re-rendered during a global project render, or alternatively only be re-rendered when their source file changes:\n\nin _quarto.yml(for all page) or header(only for this page)\n\n::: {.cell filename='_quarto.yml'}\n\n```{.r .cell-code}\nexecute:\n  freeze: true  # never re-render during project render\n```\n:::\n\n\n::: {.cell filename='_quarto.yml'}\n\n```{.r .cell-code}\nexecute:\n  freeze: auto  # re-render only when source changes\n```\n:::\n\n\n\n## Cache\n\nYou can use the cache option to cache the results of computations (using the knitr cache for R documents, and Jupyter Cache for Jupyter documents):\n\n::: {.cell filename='_quarto.yml'}\n\n```{.r .cell-code}\nexecute:\n  cache: true\n```\n:::\n\n\nNote that cache invalidation is triggered by changes in chunk source code (or other cache attributes you’ve defined). You may however need to manually refresh the cache if you know that some other input (or even time) has changed sufficiently to warrant an update. To do this, render either individual files or an entire project using the --cache-refresh option:\n\n\n\n\nsource:https://quarto.org/docs/projects/code-execution.html\n\n::: {.cell filename='Terminal'}\n\n```{.r .cell-code}\nquarto render mydoc.qmd --cache-refresh # single doc\nquarto render --cache-refresh           # entire project\n```\n:::\n\n\n# add comment\n\n## using giscus comment tool\n\nhttps://giscus.app/\n\n### step 1 install giscus on github\n\nhttps://github.com/apps/giscus\n\n### step 2 enable GitHub Discussions for your repository\n\n![](images/clipboard-2990658216.png)\n\n### step 3 add script to blog post\n\n::: {.cell}\n\n```{.r .cell-code}\n'''\n<script src=\"https://giscus.app/client.js\"\n        data-repo=\"[ENTER REPO HERE]\"\n        data-repo-id=\"[ENTER REPO ID HERE]\"\n        data-category=\"[ENTER CATEGORY NAME HERE]\"\n        data-category-id=\"[ENTER CATEGORY ID HERE]\"\n        data-mapping=\"pathname\"\n        data-strict=\"0\"\n        data-reactions-enabled=\"1\"\n        data-emit-metadata=\"0\"\n        data-input-position=\"bottom\"\n        data-theme=\"preferred_color_scheme\"\n        data-lang=\"en\"\n        crossorigin=\"anonymous\"\n        async>\n</script>\n'''\n```\n:::\n\n\n#### step 3b or using comment for all page\n\nadd into _quarto.yml\n\n::: {.cell filename='_quarto.yml'}\n\n```{.r .cell-code}\nformat:\n  html:\n    include-after-body: \n         - text: <script src=\"https://giscus.app/client.js\" data-repo=\"[ENTER REPO HERE]\" data-repo-id=\"[ENTER REPO ID HERE]\" data-category=\"[ENTER CATEGORY NAME HERE]\" data-category-id=\"[ENTER CATEGORY ID HERE]\" data-mapping=\"pathname\" data-strict=\"0\" data-reactions-enabled=\"1\" data-emit-metadata=\"0\" data-input-position=\"bottom\" data-theme=\"preferred_color_scheme\" data-lang=\"en\" crossorigin=\"anonymous\" async> </script>\n```\n:::\n\n\n\n\n# quarto engine\n\nQuarto is a multi-language, next generation version of R Markdown from RStudio, with many new features and capabilities\n\n\n::: panel-tabset\n\n## using R\n\nby defalut,Quarto uses Knitr to execute R code\n\n::: {.cell}\n\n```{.r .cell-code}\ntitle: \"matplotlib demo\"\nformat:\n  html:\n    code-fold: true\n```\n:::\n\n\n## using Python\n\nwhen set jupyter: python3 it will run quarto file with python\n\n### First, install jupyter & rpy2\n\n::: {.cell}\n\n```{.bash .cell-code}\npip install jupyter\npip install rpy2\n```\n:::\n\n\n### add engine jupyter: python3\n::: {.cell}\n\n```{.r .cell-code}\n---\ntitle: \"ggplot2 demo\"\nauthor: \"Norah Jones\"\ndate: \"5/22/2021\"\nformat: \n  html:\n    code-fold: true\njupyter: python3\n---\n```\n:::\n\nNote that when rendering an .ipynb Quarto will not execute the cells within the notebook by default (the presumption being that you have already executed them while editing the notebook)\n\nYou can also specify this behavior within the notebook’s YAML front matter:\n\n::: {.cell}\n\n```{.r .cell-code}\n---\ntitle: \"My Notebook\"\nexecute: \n  enabled: true\n---\n```\n:::\n\n### Run R in python code chunk under python environment\n\n\n\n::: {.cell}\n\n```{.python .cell-code}\n%load_ext rpy2.ipython\n```\n:::\n\n\n::: {.cell}\n\n```{.python .cell-code}\n%%R\nprint(R.version)\n```\n:::\n\n:::\n\n# quarto output format\n\n\n::: panel-tabset\n\n## html\n\n::: {.cell}\n\n```{.r .cell-code}\n---\ntitle: \"ggplot2 demo\"\nauthor: \"Tony D\"\ndate: \"5/22/2021\"\nformat: \n  html\n---\n```\n:::\n\n\n\n## pdf\n\n::: {.cell}\n\n```{.r .cell-code}\n---\ntitle: \"ggplot2 demo\"\nauthor: \"Tony D\"\ndate: \"5/22/2021\"\nformat: \n  pdf\n---\n```\n:::\n\n## MS words\n\n::: {.cell}\n\n```{.r .cell-code}\n---\ntitle: \"ggplot2 demo\"\nauthor: \"Tony D\"\ndate: \"5/22/2021\"\nformat: \n  docx\n---\n```\n:::\n\n\n## MS PowerPoint\n\n::: {.cell}\n\n```{.r .cell-code}\n---\ntitle: \"ggplot2 demo\"\nauthor: \"Tony D\"\ndate: \"5/22/2021\"\nformat: \n  pptx\n---\n```\n:::\n\n\n\n## Revealjs\n\n::: {.cell}\n\n```{.r .cell-code}\n---\ntitle: \"ggplot2 demo\"\nauthor: \"Tony D\"\ndate: \"5/22/2021\"\nformat: \n  revealjs\n---\n```\n:::\n\n\n## multi ouput format at once\n\n::: {.cell}\n\n```{.r .cell-code}\n---\ntitle: \"ggplot2 demo\"\nauthor: \"Tony D\"\ndate: \"5/22/2021\"\nformat: \n  html: default\n  revealjs: default\n---\n```\n:::\n\n\n\n\n\n## Others\n\n<iframe width=\"900\" height=\"600\" src=\"https://quarto.org/docs/output-formats/all-formats.html\"></iframe>\n\n\n:::\n\n\n\n\n# Reference\n\nhttps://www.rstudio.com/wp-content/uploads/2015/02/rmarkdown-cheatsheet.pdf",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}